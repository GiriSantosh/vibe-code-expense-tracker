version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: expense-tracker-db
    environment:
      POSTGRES_DB: expense_tracker
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - expense-tracker-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d expense_tracker"]
      interval: 30s
      timeout: 10s
      retries: 3

  keycloak:
    image: quay.io/keycloak/keycloak:23.0.3
    container_name: expense-tracker-keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: password
      KC_HOSTNAME_STRICT: false
      KC_HTTP_ENABLED: true
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8081
    ports:
      - "8081:8080"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./docker/keycloak/realm-export.json:/opt/keycloak/data/import/realm-export.json
    networks:
      - expense-tracker-network
    restart: unless-stopped
    command: start-dev --import-realm

  backend:
    build:
      context: ./expense-tracker
      dockerfile: Dockerfile
      target: production
    container_name: expense-tracker-backend
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/expense_tracker
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: false
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_AUTHORIZATION_URI: http://localhost:8081/realms/expense-tracker/protocol/openid-connect/auth
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_TOKEN_URI: http://keycloak:8080/realms/expense-tracker/protocol/openid-connect/token
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_USER_INFO_URI: http://keycloak:8080/realms/expense-tracker/protocol/openid-connect/userinfo
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_JWK_SET_URI: http://keycloak:8080/realms/expense-tracker/protocol/openid-connect/certs
      KEYCLOAK_CLIENT_SECRET: ${KEYCLOAK_CLIENT_SECRET:-6kcwPFNSwgztS4rn3cSuK6aHWt44YkaG}
      ENCRYPTION_MASTER_KEY: ${ENCRYPTION_MASTER_KEY:-defaultKey123456789012345678901234}
      CORS_ALLOWED_ORIGINS: http://localhost:3000,http://localhost:8081
      KEYCLOAK_AUTH_SERVER_URL: http://keycloak:8080
      KEYCLOAK_EXTERNAL_URL: http://localhost:8081
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_started
    networks:
      - expense-tracker-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./expense-tracker-frontend
      dockerfile: Dockerfile
      target: development
    container_name: expense-tracker-frontend
    environment:
      REACT_APP_API_BASE_URL: http://localhost:8080
      REACT_APP_KEYCLOAK_URL: http://localhost:8081
      REACT_APP_KEYCLOAK_REALM: expense-tracker
      REACT_APP_KEYCLOAK_CLIENT_ID: expense-tracker-frontend
      REACT_APP_OAUTH2_REDIRECT_URI: http://localhost:3000/auth/callback
      REACT_APP_ENABLE_PII_MASKING: true
      REACT_APP_SESSION_TIMEOUT: 1800
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - ./expense-tracker-frontend/src:/app/src
      - ./expense-tracker-frontend/public:/app/public
    networks:
      - expense-tracker-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  expense-tracker-network:
    driver: bridge